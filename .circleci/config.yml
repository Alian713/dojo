version: 2.1

executors:
  python-executor:
    docker:
      - image: cimg/python:3.11.9

workflows:
  release:
    jobs:
      - ruff-lint
      - setup-conda
      - nox-compatibility-tests:
          matrix:
            version: ["3.10", "3.11", "3.12"]
          requires:
            - setup-conda
      - nox-unit-tests:
          matrix:
            version: ["3.10", "3.11", "3.12"]
          requires:
            - setup-conda
      - release:
          filters:
            branches:
              only:
                - main

jobs:
  setup-conda:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install Miniconda
          command: |
            curl -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            chmod +x ~/miniconda.sh
            bash ~/miniconda.sh -b -p $HOME/miniconda
            rm ~/miniconda.sh
            echo 'export PATH=$HOME/miniconda/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Verify Conda Installation
          command: conda --version
      - save_cache:
          key: v1-conda-cache
          paths:
            - $HOME/miniconda

  release:
    docker:
      - image: hoppr/semantic-release
    resource_class: tensorplex/standard
    steps:
      - checkout
      - run:
          name: Install Semantic Release plugins
          command: npm install -g -D semantic-release @semantic-release/{git,github,changelog}
      - run:
          name: Run semantic release
          command: npx semantic-release

  ruff-lint:
    executor: python-executor
    steps:
      - checkout
      - run: pip install ruff
      - run: rm -rf .ruff_cache
      - run: ruff clean
      - run: ruff --version
      - run: ruff check . --config pyproject.toml --no-cache

  nox-compatibility-tests:
    executor: python-executor
    parameters:
      version:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: v1-conda-cache
      - run:
          name: Set Python Version
          command: pyenv global << parameters.version >>
      - run:
          name: Verify Conda Installation
          command: source $BASH_ENV && conda --version
      - run:
          name: Install nox
          command: source $BASH_ENV && pip install nox
      - run:
          name: Run Nox Compatibility Tests
          command: source $BASH_ENV && nox -s compatibility

  nox-unit-tests:
    executor: python-executor
    parameters:
      version:
        type: string
    environment:
      DOJO_API_BASE_URL: "***REMOVED***"
    steps:
      - checkout
      - restore_cache:
          key: v1-conda-cache
      - run:
          name: Set Python Version
          command: pyenv global << parameters.version >>
      - run:
          name: Verify Conda Installation
          command: source $BASH_ENV && conda --version
      - run:
          name: Install nox
          command: source $BASH_ENV && pip install nox
      - run:
          name: Run Nox Unit Tests
          command: source $BASH_ENV && nox -s unit_tests
